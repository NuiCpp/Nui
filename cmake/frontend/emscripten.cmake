# TODO: Allow emscripten args to be passed
function(nui_prepare_emscripten_target)
    cmake_parse_arguments(
        NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS
        ""
        "TARGET;PREJS;STATIC"
        "EMSCRIPTEN_LINK_OPTIONS;EMSCRIPTEN_COMPILE_OPTIONS;PARCEL_NO_OPTIMIZE"
        ${ARGN}
    )

    if (NOT NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_STATIC)
        get_target_property(NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_SOURCE_DIR ${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_TARGET} SOURCE_DIR)
        set(NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_STATIC ${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_SOURCE_DIR}/static)
    endif()

    nui_set_target_output_directories(${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_TARGET})

    add_custom_target(
        ${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_TARGET}-npm-install 
        COMMAND npm install
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
    )

    add_custom_target(
        ${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_TARGET}-parcel 
        COMMAND ${CMAKE_COMMAND} -E copy_directory ${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_STATIC} ${CMAKE_BINARY_DIR}/static
        COMMAND ${CMAKE_BINARY_DIR}/node_modules/.bin/parcel build "$<$<BOOL:${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_PARCEL_NO_OPTIMIZE}>:--no-optimize>" --dist-dir ${CMAKE_BINARY_DIR}/bin
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
        BYPRODUCTS ${CMAKE_BINARY_DIR}/bin/index.html
        DEPENDS ${CMAKE_BINARY_DIR}/bin/index.js
    )

    string (REPLACE ";" " " EMSCRIPTEN_LINK "${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_EMSCRIPTEN_LINK_OPTIONS}")
    target_compile_options(${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_TARGET} PRIVATE ${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_EMSCRIPTEN_COMPILE_OPTIONS})
    set_target_properties(
        ${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_TARGET}
        PROPERTIES
            LINK_FLAGS
            "-sENVIRONMENT=web -sSINGLE_FILE -sNO_EXIT_RUNTIME=1 ${EMSCRIPTEN_LINK} --bind --pre-js=\"${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_PREJS}\""
    )
    set_target_properties(${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_TARGET} PROPERTIES OUTPUT_NAME "index")
    add_dependencies(${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_TARGET}-parcel ${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_TARGET}-npm-install)
    add_dependencies(${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_TARGET}-parcel ${NUI_PREPARE_EMSCRIPTEN_TARGET_ARGS_TARGET})
endfunction()
