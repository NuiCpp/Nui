name: MacOS

on:
  push:
    branches: ["main", "devel"]
  pull_request:
    branches: ["main", "devel"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  macos-13:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Brew Dependencies
        run: brew install llvm@19 boost cryptopp make nlohmann-json curl

      - name: Tool Version Dump
        run: |
            clang++ --version
            cmake --version
            ninja --version
            brew list --versions boost

      - name: Configure CMake
        run: |
          export PATH="/opt/homebrew/opt/llvm@19/bin:$PATH"
          cmake -B ${{github.workspace}}/build/clang_${{env.BUILD_TYPE}} -G"Ninja" -DNUI_ENABLE_TESTS=on -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DNUI_BUILD_EXAMPLES=on -DCMAKE_CXX_EXTENSIONS=on -DCMAKE_CXX_COMPILER=/opt/homebrew/opt/llvm@19/bin/clang++ -DCMAKE_C_COMPILER=/opt/homebrew/opt/llvm@19/bin/clang -DCMAKE_OSX_SYSROOT=$(xcrun --sdk macosx --show-sdk-path) -DCMAKE_EXE_LINKER_FLAGS="-L/opt/homebrew/opt/llvm@19/lib/c++ -L/opt/homebrew/opt/llvm@19/lib/unwind -lunwind" -DNUI_NPM=npm -DNUI_NODE=node -DCMAKE_CXX_STANDARD=20
        env:
          CPPFLAGS: "-I/opt/homebrew/opt/llvm@19/include"

      - name: Build
        run:  |
          export PATH="/opt/homebrew/opt/llvm@19/bin:$PATH"
          cmake --build ${{github.workspace}}/build/clang_${{env.BUILD_TYPE}} --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build/clang_${{env.BUILD_TYPE}}
        run: ./tests/nui-tests
